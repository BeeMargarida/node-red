{"172.25.0.3":{"status":1,"nodes":[{"id":"8ee2fa76.6a7af","textId":"8ee2fa766a7af","type":"mqtt in","z":"b4500908.46ebb8","predicates":[],"priorities":["micropython"],"brokerUrl":null,"inputTopics":["input"],"outputTopics":["topic0_node"],"subscriptionsMQTT":{},"micropythonCode":"\nimport ubinascii\ninput_topics_8ee2fa766a7af = [\"input\"]\noutput_topics_8ee2fa766a7af = [\"topic0_node\"]\nnode_datatype_8ee2fa766a7af = \"auto\"\nnode_qos_8ee2fa766a7af = 2\n\ndef on_input_8ee2fa766a7af(topic, msg, retained):\n    if node_datatype_8ee2fa766a7af == \"base64\":\n        msg = str(ubinascii.b2a_base64(msg))\n    elif node_datatype_8ee2fa766a7af == \"utf8\":\n        msg = msg.encode(\"utf-8\")\n    elif node_datatype_8ee2fa766a7af == \"json\":\n        try:\n            msg = ujson.loads(str(msg))\n        except:\n            print(\"Not a JSON\")\n    msg = dict(\n        topic=topic,\n        payload=msg,\n        qos=node_qos_8ee2fa766a7af,\n        retain=retained\n    )\n    loop = asyncio.get_event_loop()\n    loop.create_task(on_output(ujson.dumps(msg), output_topics_8ee2fa766a7af))\n","hasInput":true,"local":false}]},"node-red":{"status":1,"nodes":[{"id":"31001642.546d82","textId":"31001642546d82","type":"debug","z":"b4500908.46ebb8","predicates":["node-red"],"priorities":[],"brokerUrl":"mqtt://172.25.0.2:1883","inputTopics":["topic0_node"],"outputTopics":[],"subscriptionsMQTT":{"topic0_node":{"topic":"topic0_node","qos":{"qos":2}}},"micropythonCode":"","hasInput":true,"local":true}]},"172.25.0.4":{"status":1,"nodes":[{"id":"8ee2fa76.6a7af","textId":"8ee2fa766a7af","type":"mqtt in","z":"b4500908.46ebb8","predicates":[],"priorities":["micropython"],"brokerUrl":null,"inputTopics":["input"],"outputTopics":["topic0_node"],"subscriptionsMQTT":{},"micropythonCode":"\nimport ubinascii\ninput_topics_8ee2fa766a7af = [\"input\"]\noutput_topics_8ee2fa766a7af = [\"topic0_node\"]\nnode_datatype_8ee2fa766a7af = \"auto\"\nnode_qos_8ee2fa766a7af = 2\n\ndef on_input_8ee2fa766a7af(topic, msg, retained):\n    if node_datatype_8ee2fa766a7af == \"base64\":\n        msg = str(ubinascii.b2a_base64(msg))\n    elif node_datatype_8ee2fa766a7af == \"utf8\":\n        msg = msg.encode(\"utf-8\")\n    elif node_datatype_8ee2fa766a7af == \"json\":\n        try:\n            msg = ujson.loads(str(msg))\n        except:\n            print(\"Not a JSON\")\n    msg = dict(\n        topic=topic,\n        payload=msg,\n        qos=node_qos_8ee2fa766a7af,\n        retain=retained\n    )\n    loop = asyncio.get_event_loop()\n    loop.create_task(on_output(ujson.dumps(msg), output_topics_8ee2fa766a7af))\n","hasInput":true,"local":false}]},"172.25.0.5":{"status":1,"nodes":[{"id":"8ee2fa76.6a7af","textId":"8ee2fa766a7af","type":"mqtt in","z":"b4500908.46ebb8","predicates":[],"priorities":["micropython"],"brokerUrl":null,"inputTopics":["input"],"outputTopics":["topic0_node"],"subscriptionsMQTT":{},"micropythonCode":"\nimport ubinascii\ninput_topics_8ee2fa766a7af = [\"input\"]\noutput_topics_8ee2fa766a7af = [\"topic0_node\"]\nnode_datatype_8ee2fa766a7af = \"auto\"\nnode_qos_8ee2fa766a7af = 2\n\ndef on_input_8ee2fa766a7af(topic, msg, retained):\n    if node_datatype_8ee2fa766a7af == \"base64\":\n        msg = str(ubinascii.b2a_base64(msg))\n    elif node_datatype_8ee2fa766a7af == \"utf8\":\n        msg = msg.encode(\"utf-8\")\n    elif node_datatype_8ee2fa766a7af == \"json\":\n        try:\n            msg = ujson.loads(str(msg))\n        except:\n            print(\"Not a JSON\")\n    msg = dict(\n        topic=topic,\n        payload=msg,\n        qos=node_qos_8ee2fa766a7af,\n        retain=retained\n    )\n    loop = asyncio.get_event_loop()\n    loop.create_task(on_output(ujson.dumps(msg), output_topics_8ee2fa766a7af))\n","hasInput":true,"local":false}]}}